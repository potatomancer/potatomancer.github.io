{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/site-data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\r\\n  margin: 40px;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  -ms-grid-columns: 230px 210px 300px;\\r\\n      grid-template-columns: 230px 210px 300px;\\r\\n  background-color: #fff;\\r\\n  color: #444;\\r\\n  margin-left: 30%;\\r\\n  margin-top: 10%;\\r\\n}\\r\\n\\r\\n.box {\\r\\n  border-radius: 5px;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"box a\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <input type=\\\"hidden\\\" formControlName=\\\"$key\\\" placeholder=\\\"Name\\\">\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.name.errors}\\\">\\n      </mat-form-field>\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.name.errors\\\">This field is required.</div>\\n    </form>\\n  </div>\\n  <div class=\\\"box b\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput formControlName=\\\"food\\\" placeholder=\\\"Favorite Food\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.food.errors}\\\">\\n      </mat-form-field>\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.name.errors\\\">This field is required.</div>\\n    </form>\\n\\n  </div>\\n  <div class=\\\"box c\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput value=\\\"Content from Firebase\\\" readonly=\\\"true\\\">\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\" box d\\\">\\n    <button mat-button style=\\\"border: solid; border-radius: 10%;\\\" (click)=\\\"onSubmit()\\\" type=\\\"submit\\\">Submit</button>\\n    <button mat-button style=\\\"border: solid; border-radius: 10%; margin-left: 25px;\\\" (click)=\\\"onEraseAll()\\\" type=\\\"submit\\\">Erase\\n      All</button>\\n  </div>\\n  <div class=\\\"box e\\\">\\n    <button mat-button style=\\\"border: solid; border-radius: 10%;\\\" (click)=\\\"onEditLast()\\\" type=\\\"submit\\\">Edit Last</button>\\n  </div>\\n  <div class=\\\"box f\\\">\\n    <h3 *ngFor=\\\"let item of (items | async); let i = index;\\\">{{ i + 1 }}. {{ item.name }} loves {{\\n      item.food }}</h3>\\n  </div>\\n</div>\\n\"","import { SiteDataService } from './site-data.service';\nimport { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'firebaseObserv';\n  submitted: boolean;\n  items: BehaviorSubject<any[]>;\n  form = new FormGroup({\n    $key: new FormControl(null),\n    name: new FormControl('', Validators.required),\n    food: new FormControl('', Validators.required)\n  });\n  formControls = this.form.controls;\n\n  constructor(private siteData: SiteDataService) {\n    this.siteData.getList().subscribe(list => {\n      this.items = list;\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.valid) {\n      if (this.form.get('$key').value === null) {\n        this.siteData.pushItems({\n          name: this.form.get('name').value,\n          food: this.form.get('food').value\n        });\n      } else {\n        // update\n      }\n      this.submitted = false;\n    }\n  }\n\n  onEraseAll() {\n    this.siteData.eraseList();\n  }\n\n  onEditLast() {\n    const item = this.items.getValue().pop();\n    this.form.get('name').setValue(item.name);\n    this.form.get('food').setValue(item.food);\n    this.siteData.remove(item);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { MatInputModule, MatFormFieldModule } from '@angular/material';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { FormsModule } from '@angular/forms';\nimport { environment } from '../environments/environment';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule, // for database\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteDataService {\n  private list = new BehaviorSubject(null);\n\n  constructor(private db: AngularFireDatabase) {\n  }\n\n  pushItems(item) {\n    if (item !== null && item.name.length > 0 && item.food.length > 0) {\n      this.db.list('/items').push({ name: item.name, food: item.food });\n    }\n  }\n\n  getList() {\n    this.list.next(this.db.list('items').valueChanges());\n    return this.list;\n  }\n\n  eraseList() {\n    this.db.list('/items').remove();\n  }\n\n  remove(item) {\n    this.db.list('/items').remove(item);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyC6qvoRb1sVNJVDdT27u-UmRsU2GAgiIFw',\n    authDomain: 'fir-observablestore.firebaseapp.com',\n    databaseURL: 'https://fir-observablestore.firebaseio.com',\n    projectId: 'fir-observablestore',\n    storageBucket: 'fir-observablestore.appspot.com',\n    messagingSenderId: '618049577180'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}